=============
agreement.rtx
=============

n: _.gender.number;
adj: _.gender.number;
NP: _;

gender = m f mf;
number = sg pl sp;

NP -> adj n {2 _ 1[number=2.number]};

---

(source_file
  (output_rule
    (ident)
    (ident) (ident) (ident))
  (output_rule
    (ident)
    (ident) (ident) (ident))
  (output_rule
    (ident)
    (ident))
  (attr_rule
    (ident)
    (ident) (ident) (ident))
  (attr_rule
    (ident)
    (ident) (ident) (ident))
  (reduce_rule_group
    (ident)
    (arrow)
    (reduce_rule
      (pattern_element (ident)) (pattern_element (ident))
      (output_element (num))
      (blank)
      (output_element
        (num)
	(output_var_set (ident) (clip (num) (ident)))))))

=========
negation
=========

a: (if (not ( 1.b = "hi" ) ) 1(c));

---

(source_file
  (output_rule
    (ident)
    (lu_cond
      (if_tok)
      (condition
        (not)
        (clip (num) (ident))
        (str_op)
        (string))
      (output_element
        (num)
        (macro_name
          (ident))))))
