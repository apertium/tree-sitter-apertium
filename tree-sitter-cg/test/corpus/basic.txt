===========
simple test
===========

SETS

LIST X = a b c;
LIST Y = d e f;

SECTION

SELECT X IF (1 Y);

END

---

(source_file
  (section_header)
  (list
    (LIST)
    name: (setname)
    (eq)
    value: (taglist (tag (ntag)) (tag (ntag)) (tag (ntag)))
    (semicolon))
  (list
    (LIST)
    name: (setname)
    (eq)
    value: (taglist (tag (ntag)) (tag (ntag)) (tag (ntag)))
    (semicolon))
  (section_header)
  (rule
    type: (ruletype)
    target: (rule_target target: (inlineset (inlineset_single (setname))))
    (IF)
    context: (contexttest
      pos: (contextpos (ctx_number))
      set: (inlineset (inlineset_single (setname))))
    (semicolon))
  (comment (END)))

========
comments
========

SETS
LIST X = a b;

SECTION
SELECT X IF (1 X);

END

some other random text

---

(source_file
  (section_header)
  (list
    (LIST) name: (setname) (eq)
    value: (taglist (tag (ntag)) (tag (ntag))) (semicolon))
  (section_header)
  (rule
    type: (ruletype)
    target: (rule_target target: (inlineset (inlineset_single (setname))))
    (IF)
    context: (contexttest pos: (contextpos (ctx_number))
      set: (inlineset (inlineset_single (setname))))
		(semicolon))
  (comment (END)))

==========
rule flags
==========

REMCOHORT IGNORED (punct) ;
SETPARENT SAFE (*) TO (1 (*)) ;

---

(source_file
  (rule
    type: (ruletype)
    flag: (ruleflag (ruleflag_name))
    target: (rule_target
      target: (inlineset (inlineset_single (taglist (tag (ntag))))))
    (semicolon))
  (rule_parentchild
    type: (ruletype_parentchild)
    flag: (ruleflag (ruleflag_name))
    trg: (rule_target
      target: (inlineset (inlineset_single (taglist (tag (ntag))))))
    (TO)
    to_from: (contexttest
      pos: (contextpos (ctx_number))
      set: (inlineset (inlineset_single (taglist (tag (ntag))))))
    (semicolon)))
